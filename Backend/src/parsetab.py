
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftORleftANDleftUNOTnonassocMAYORQUEMENORQUEMAYORIGUALMENORIGUALIGUALACIONDIFERENCIAleftMASMENOSleftPORDIVMODULOrightUMENOSrightPOTEAND CADENA CHAR COMA COMENTARIO_SIMPLE COMENTARIO_VARIAS_LINEAS DECIMAL DIFERENCIA DIV DOBLEPUNTO ENTERO ID IGUAL IGUALACION LLAVEA LLAVEC MAS MAYORIGUAL MAYORQUE MENORIGUAL MENORQUE MENOS MODULO NOT OR PARA PARC POR POTE PUNTOCOMA RFALSE RPRINT RPRINTLN RTRUEinit            : instruccionesinstrucciones    : instrucciones instruccioninstrucciones    : instruccioninstruccion  : ins_print fin_instruccion\n                    | ins_println fin_instruccion\n                    | COMENTARIO_VARIAS_LINEAS\n                    | COMENTARIO_SIMPLE\n    instruccion        : error PUNTOCOMAfin_instruccion  : PUNTOCOMAins_print   : RPRINT PARA expresion PARCins_println   : RPRINTLN PARA expresion PARC\n    expresion : expresion MAS expresion\n            | expresion MENOS expresion\n            | expresion POR expresion\n            | expresion DIV expresion\n            | expresion POTE expresion\n            | expresion MODULO expresion\n            | expresion MAYORQUE expresion\n            | expresion MENORQUE expresion\n            | expresion MAYORIGUAL expresion\n            | expresion MENORIGUAL expresion\n            | expresion IGUALACION expresion\n            | expresion DIFERENCIA expresion\n    expresion : MENOS expresion %prec UMENOS\n                | NOT expresion %prec UNOT expresion :   PARA expresion PARC expresion : ENTEROexpresion : DECIMALexpresion : CADENAexpresion : CHARexpresion : RTRUEexpresion : RFALSE'
    
_lr_action_items = {'COMENTARIO_VARIAS_LINEAS':([0,2,3,6,7,11,12,13,14,15,],[6,6,-3,-6,-7,-2,-4,-9,-5,-8,]),'COMENTARIO_SIMPLE':([0,2,3,6,7,11,12,13,14,15,],[7,7,-3,-6,-7,-2,-4,-9,-5,-8,]),'error':([0,2,3,6,7,11,12,13,14,15,],[8,8,-3,-6,-7,-2,-4,-9,-5,-8,]),'RPRINT':([0,2,3,6,7,11,12,13,14,15,],[9,9,-3,-6,-7,-2,-4,-9,-5,-8,]),'RPRINTLN':([0,2,3,6,7,11,12,13,14,15,],[10,10,-3,-6,-7,-2,-4,-9,-5,-8,]),'$end':([1,2,3,6,7,11,12,13,14,15,],[0,-1,-3,-6,-7,-2,-4,-9,-5,-8,]),'PUNTOCOMA':([4,5,8,30,45,],[13,13,15,-10,-11,]),'PARA':([9,10,16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[16,17,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'MENOS':([16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[20,20,20,32,20,20,-27,-28,-29,-30,-31,-32,32,32,20,20,20,20,20,20,20,20,20,20,20,20,-24,32,-26,-12,-13,-14,-15,-16,-17,32,32,32,32,32,32,]),'NOT':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'ENTERO':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DECIMAL':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'CADENA':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'CHAR':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'RTRUE':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'RFALSE':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'PARC':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[30,-27,-28,-29,-30,-31,-32,45,46,-24,-25,-26,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,]),'MAS':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[31,-27,-28,-29,-30,-31,-32,31,31,-24,31,-26,-12,-13,-14,-15,-16,-17,31,31,31,31,31,31,]),'POR':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[33,-27,-28,-29,-30,-31,-32,33,33,-24,33,-26,33,33,-14,-15,-16,-17,33,33,33,33,33,33,]),'DIV':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[34,-27,-28,-29,-30,-31,-32,34,34,-24,34,-26,34,34,-14,-15,-16,-17,34,34,34,34,34,34,]),'POTE':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[35,-27,-28,-29,-30,-31,-32,35,35,35,35,-26,35,35,35,35,35,35,35,35,35,35,35,35,]),'MODULO':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[36,-27,-28,-29,-30,-31,-32,36,36,-24,36,-26,36,36,-14,-15,-16,-17,36,36,36,36,36,36,]),'MAYORQUE':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[37,-27,-28,-29,-30,-31,-32,37,37,-24,37,-26,-12,-13,-14,-15,-16,-17,None,None,None,None,None,None,]),'MENORQUE':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[38,-27,-28,-29,-30,-31,-32,38,38,-24,38,-26,-12,-13,-14,-15,-16,-17,None,None,None,None,None,None,]),'MAYORIGUAL':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[39,-27,-28,-29,-30,-31,-32,39,39,-24,39,-26,-12,-13,-14,-15,-16,-17,None,None,None,None,None,None,]),'MENORIGUAL':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[40,-27,-28,-29,-30,-31,-32,40,40,-24,40,-26,-12,-13,-14,-15,-16,-17,None,None,None,None,None,None,]),'IGUALACION':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[41,-27,-28,-29,-30,-31,-32,41,41,-24,41,-26,-12,-13,-14,-15,-16,-17,None,None,None,None,None,None,]),'DIFERENCIA':([19,22,23,24,25,26,27,28,29,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,],[42,-27,-28,-29,-30,-31,-32,42,42,-24,42,-26,-12,-13,-14,-15,-16,-17,None,None,None,None,None,None,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,11,]),'ins_print':([0,2,],[4,4,]),'ins_println':([0,2,],[5,5,]),'fin_instruccion':([4,5,],[12,14,]),'expresion':([16,17,18,20,21,31,32,33,34,35,36,37,38,39,40,41,42,],[19,28,29,43,44,47,48,49,50,51,52,53,54,55,56,57,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','Gramatica.py',182),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_instrucciones_instruccion','Gramatica.py',186),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_instruccion','Gramatica.py',194),
  ('instruccion -> ins_print fin_instruccion','instruccion',2,'p_instruccion','Gramatica.py',203),
  ('instruccion -> ins_println fin_instruccion','instruccion',2,'p_instruccion','Gramatica.py',204),
  ('instruccion -> COMENTARIO_VARIAS_LINEAS','instruccion',1,'p_instruccion','Gramatica.py',205),
  ('instruccion -> COMENTARIO_SIMPLE','instruccion',1,'p_instruccion','Gramatica.py',206),
  ('instruccion -> error PUNTOCOMA','instruccion',2,'p_instruccion_error','Gramatica.py',213),
  ('fin_instruccion -> PUNTOCOMA','fin_instruccion',1,'p_fin_instruccion','Gramatica.py',218),
  ('ins_print -> RPRINT PARA expresion PARC','ins_print',4,'p_imprimir_print','Gramatica.py',223),
  ('ins_println -> RPRINTLN PARA expresion PARC','ins_println',4,'p_imprimir_println','Gramatica.py',227),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','Gramatica.py',234),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','Gramatica.py',235),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','Gramatica.py',236),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion_binaria','Gramatica.py',237),
  ('expresion -> expresion POTE expresion','expresion',3,'p_expresion_binaria','Gramatica.py',238),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresion_binaria','Gramatica.py',239),
  ('expresion -> expresion MAYORQUE expresion','expresion',3,'p_expresion_binaria','Gramatica.py',240),
  ('expresion -> expresion MENORQUE expresion','expresion',3,'p_expresion_binaria','Gramatica.py',241),
  ('expresion -> expresion MAYORIGUAL expresion','expresion',3,'p_expresion_binaria','Gramatica.py',242),
  ('expresion -> expresion MENORIGUAL expresion','expresion',3,'p_expresion_binaria','Gramatica.py',243),
  ('expresion -> expresion IGUALACION expresion','expresion',3,'p_expresion_binaria','Gramatica.py',244),
  ('expresion -> expresion DIFERENCIA expresion','expresion',3,'p_expresion_binaria','Gramatica.py',245),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','Gramatica.py',275),
  ('expresion -> NOT expresion','expresion',2,'p_expresion_unaria','Gramatica.py',276),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_agrupacion','Gramatica.py',286),
  ('expresion -> ENTERO','expresion',1,'p_expresion_entero','Gramatica.py',290),
  ('expresion -> DECIMAL','expresion',1,'p_primitivo_decimal','Gramatica.py',294),
  ('expresion -> CADENA','expresion',1,'p_primitivo_cadena','Gramatica.py',298),
  ('expresion -> CHAR','expresion',1,'p_primitivo_char','Gramatica.py',302),
  ('expresion -> RTRUE','expresion',1,'p_primitivo_true','Gramatica.py',306),
  ('expresion -> RFALSE','expresion',1,'p_primitivo_false','Gramatica.py',310),
]
